/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a car_adaptor car.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "car_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class CarAdaptor
 */

CarAdaptor::CarAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

CarAdaptor::~CarAdaptor()
{
    // destructor
}

double CarAdaptor::battery() const
{
    // get the value of property battery
    return qvariant_cast< double >(parent()->property("battery"));
}

double CarAdaptor::rpm() const
{
    // get the value of property rpm
    return qvariant_cast< double >(parent()->property("rpm"));
}

double CarAdaptor::speed() const
{
    // get the value of property speed
    return qvariant_cast< double >(parent()->property("speed"));
}

void CarAdaptor::checkCanStatus(bool canstatus)
{
    // handle method call local.Car.checkCanStatus
    QMetaObject::invokeMethod(parent(), "checkCanStatus", Q_ARG(bool, canstatus));
}

void CarAdaptor::checkDbusStatus()
{
    // handle method call local.Car.checkDbusStatus
    QMetaObject::invokeMethod(parent(), "checkDbusStatus");
}

void CarAdaptor::setBattery(double battery)
{
    // handle method call local.Car.setBattery
    QMetaObject::invokeMethod(parent(), "setBattery", Q_ARG(double, battery));
}

void CarAdaptor::setRPM(double rpm)
{
    // handle method call local.Car.setRPM
    QMetaObject::invokeMethod(parent(), "setRPM", Q_ARG(double, rpm));
}

void CarAdaptor::setSpeed(double speed)
{
    // handle method call local.Car.setSpeed
    QMetaObject::invokeMethod(parent(), "setSpeed", Q_ARG(double, speed));
}

